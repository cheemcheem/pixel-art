:root {
    --padding: 20px;
    --slider-thickness: 40px;
    /* --vh is set in GridCanvas.tsx */
    --min-logo: 32px;
    --max-logo: 64px;
}

#pixel-art-container {
    display: grid; 
    grid-template: 
        '.  header   header  .'
        '.   main     main   .'
        '.  slider  download .'
    ;
    grid-template-columns: 
        minmax(100px, auto) minmax(auto, 500px) minmax(auto, 500px) minmax(100px, auto)
    ;
    grid-template-rows: 
        var(--max-logo)
        minmax(auto, 100%) 
        var(--slider-thickness)
    ;
    grid-row-gap: var(--padding);
    grid-auto-flow: column;

    align-items: center;
    justify-content: center;

    width: 100%;
    height: calc(100% - 2 * var(--padding));
    padding: var(--padding) 0;
    
}

@media screen and (max-aspect-ratio: 3 / 4) {
    #pixel-art-container {
        grid-template: 
            ' header '
            '........'
            '  main  '
            '........'
            ' slider '
            'download'
        ;
        grid-template-columns: calc(100vw - 2 * var(--padding));
        grid-template-rows: 
            minmax(var(--min-logo), var(--max-logo))
            1fr
            calc(100vw - 2 * var(--padding))
            1fr
            var(--slider-thickness) 
            40px
        ;    
    }
}

@media screen and (min-aspect-ratio: 1 / 1){
    #pixel-art-container {
        grid-template: 
            'header download slider . main'
        ;
        grid-column-gap: var(--padding);
        grid-template-columns: minmax(var(--min-logo), var(--max-logo)) 40px var(--slider-thickness) 1fr minmax(auto, calc(var(--vh, 1vh) * 100 - 2 * var(--padding)));
        grid-template-rows: 100%;

        width: calc(100% - 2 * var(--padding));
        padding: var(--padding);

    }
}